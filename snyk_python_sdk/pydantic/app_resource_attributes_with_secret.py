# coding: utf-8

"""
    Snyk API

    Missing description placeholder

    The version of the OpenAPI document: REST
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from snyk_python_sdk.pydantic.access_token_ttl_seconds import AccessTokenTtlSeconds
from snyk_python_sdk.pydantic.app_name import AppName
from snyk_python_sdk.pydantic.client_secret import ClientSecret
from snyk_python_sdk.pydantic.context import Context
from snyk_python_sdk.pydantic.grant_type import GrantType
from snyk_python_sdk.pydantic.redirect_uris import RedirectUris
from snyk_python_sdk.pydantic.scopes import Scopes

class AppResourceAttributesWithSecret(BaseModel):
    access_token_ttl_seconds: AccessTokenTtlSeconds = Field(alias='access_token_ttl_seconds')

    # The oauth2 client id for the app.
    client_id: str = Field(alias='client_id')

    client_secret: ClientSecret = Field(alias='client_secret')

    context: Context = Field(alias='context')

    grant_type: GrantType = Field(alias='grant_type')

    # A boolean to indicate if an app is confidential or not as per the OAuth2 RFC. Confidential apps can securely store secrets. Examples of non-confidential apps are full web-based or CLIs.
    is_confidential: bool = Field(alias='is_confidential')

    # A boolean to indicate if an app is publicly available or not.
    is_public: bool = Field(alias='is_public')

    name: AppName = Field(alias='name')

    redirect_uris: RedirectUris = Field(alias='redirect_uris')

    scopes: Scopes = Field(alias='scopes')

    org_public_id: typing.Optional[str] = Field(None, alias='org_public_id')
    class Config:
        arbitrary_types_allowed = True
