# coding: utf-8

"""
    Snyk API

    Missing description placeholder

    The version of the OpenAPI document: REST
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from snyk_python_sdk import schemas  # noqa: F401


class ProjectAttributesEnvironment(
    schemas.ListSchema
):
    """NOTE:
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        
        class items(
            schemas.EnumBase,
            schemas.StrSchema
        ):
        
        
            class MetaOapg:
                enum_value_to_name = {
                    "frontend": "FRONTEND",
                    "backend": "BACKEND",
                    "internal": "INTERNAL",
                    "external": "EXTERNAL",
                    "mobile": "MOBILE",
                    "saas": "SAAS",
                    "onprem": "ONPREM",
                    "hosted": "HOSTED",
                    "distributed": "DISTRIBUTED",
                }
            
            @schemas.classproperty
            def FRONTEND(cls):
                return cls("frontend")
            
            @schemas.classproperty
            def BACKEND(cls):
                return cls("backend")
            
            @schemas.classproperty
            def INTERNAL(cls):
                return cls("internal")
            
            @schemas.classproperty
            def EXTERNAL(cls):
                return cls("external")
            
            @schemas.classproperty
            def MOBILE(cls):
                return cls("mobile")
            
            @schemas.classproperty
            def SAAS(cls):
                return cls("saas")
            
            @schemas.classproperty
            def ONPREM(cls):
                return cls("onprem")
            
            @schemas.classproperty
            def HOSTED(cls):
                return cls("hosted")
            
            @schemas.classproperty
            def DISTRIBUTED(cls):
                return cls("distributed")

    def __new__(
        cls,
        arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'ProjectAttributesEnvironment':
        return super().__new__(
            cls,
            arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
