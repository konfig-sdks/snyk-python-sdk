# coding: utf-8

"""
    Snyk API

    Missing description placeholder

    The version of the OpenAPI document: REST
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from snyk_python_sdk import schemas  # noqa: F401


class Platform(
    schemas.EnumBase,
    schemas.StrSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """
    
    @schemas.classproperty
    def AIX_PPC64(cls):
        return cls("aix/ppc64")
    
    @schemas.classproperty
    def ANDROID_386(cls):
        return cls("android/386")
    
    @schemas.classproperty
    def ANDROID_AMD64(cls):
        return cls("android/amd64")
    
    @schemas.classproperty
    def ANDROID_ARM(cls):
        return cls("android/arm")
    
    @schemas.classproperty
    def ANDROID_ARM_V5(cls):
        return cls("android/arm/v5")
    
    @schemas.classproperty
    def ANDROID_ARM_V6(cls):
        return cls("android/arm/v6")
    
    @schemas.classproperty
    def ANDROID_ARM_V7(cls):
        return cls("android/arm/v7")
    
    @schemas.classproperty
    def ANDROID_ARM64(cls):
        return cls("android/arm64")
    
    @schemas.classproperty
    def ANDROID_ARM64_V8(cls):
        return cls("android/arm64/v8")
    
    @schemas.classproperty
    def DARWIN_AMD64(cls):
        return cls("darwin/amd64")
    
    @schemas.classproperty
    def DARWIN_ARM(cls):
        return cls("darwin/arm")
    
    @schemas.classproperty
    def DARWIN_ARM_V5(cls):
        return cls("darwin/arm/v5")
    
    @schemas.classproperty
    def DARWIN_ARM_V6(cls):
        return cls("darwin/arm/v6")
    
    @schemas.classproperty
    def DARWIN_ARM_V7(cls):
        return cls("darwin/arm/v7")
    
    @schemas.classproperty
    def DARWIN_ARM64(cls):
        return cls("darwin/arm64")
    
    @schemas.classproperty
    def DARWIN_ARM64_V8(cls):
        return cls("darwin/arm64/v8")
    
    @schemas.classproperty
    def DRAGONFLY_AMD64(cls):
        return cls("dragonfly/amd64")
    
    @schemas.classproperty
    def FREEBSD_386(cls):
        return cls("freebsd/386")
    
    @schemas.classproperty
    def FREEBSD_AMD64(cls):
        return cls("freebsd/amd64")
    
    @schemas.classproperty
    def FREEBSD_ARM(cls):
        return cls("freebsd/arm")
    
    @schemas.classproperty
    def FREEBSD_ARM_V5(cls):
        return cls("freebsd/arm/v5")
    
    @schemas.classproperty
    def FREEBSD_ARM_V6(cls):
        return cls("freebsd/arm/v6")
    
    @schemas.classproperty
    def FREEBSD_ARM_V7(cls):
        return cls("freebsd/arm/v7")
    
    @schemas.classproperty
    def ILLUMOS_AMD64(cls):
        return cls("illumos/amd64")
    
    @schemas.classproperty
    def IOS_ARM64(cls):
        return cls("ios/arm64")
    
    @schemas.classproperty
    def IOS_ARM64_V8(cls):
        return cls("ios/arm64/v8")
    
    @schemas.classproperty
    def JS_WASM(cls):
        return cls("js/wasm")
    
    @schemas.classproperty
    def LINUX_386(cls):
        return cls("linux/386")
    
    @schemas.classproperty
    def LINUX_AMD64(cls):
        return cls("linux/amd64")
    
    @schemas.classproperty
    def LINUX_ARM(cls):
        return cls("linux/arm")
    
    @schemas.classproperty
    def LINUX_ARM_V5(cls):
        return cls("linux/arm/v5")
    
    @schemas.classproperty
    def LINUX_ARM_V6(cls):
        return cls("linux/arm/v6")
    
    @schemas.classproperty
    def LINUX_ARM_V7(cls):
        return cls("linux/arm/v7")
    
    @schemas.classproperty
    def LINUX_ARM64(cls):
        return cls("linux/arm64")
    
    @schemas.classproperty
    def LINUX_ARM64_V8(cls):
        return cls("linux/arm64/v8")
    
    @schemas.classproperty
    def LINUX_LOONG64(cls):
        return cls("linux/loong64")
    
    @schemas.classproperty
    def LINUX_MIPS(cls):
        return cls("linux/mips")
    
    @schemas.classproperty
    def LINUX_MIPSLE(cls):
        return cls("linux/mipsle")
    
    @schemas.classproperty
    def LINUX_MIPS64(cls):
        return cls("linux/mips64")
    
    @schemas.classproperty
    def LINUX_MIPS64LE(cls):
        return cls("linux/mips64le")
    
    @schemas.classproperty
    def LINUX_PPC64(cls):
        return cls("linux/ppc64")
    
    @schemas.classproperty
    def LINUX_PPC64LE(cls):
        return cls("linux/ppc64le")
    
    @schemas.classproperty
    def LINUX_RISCV64(cls):
        return cls("linux/riscv64")
    
    @schemas.classproperty
    def LINUX_S390X(cls):
        return cls("linux/s390x")
    
    @schemas.classproperty
    def LINUX_X86_64(cls):
        return cls("linux/x86_64")
    
    @schemas.classproperty
    def NETBSD_386(cls):
        return cls("netbsd/386")
    
    @schemas.classproperty
    def NETBSD_AMD64(cls):
        return cls("netbsd/amd64")
    
    @schemas.classproperty
    def NETBSD_ARM(cls):
        return cls("netbsd/arm")
    
    @schemas.classproperty
    def NETBSD_ARM_V5(cls):
        return cls("netbsd/arm/v5")
    
    @schemas.classproperty
    def NETBSD_ARM_V6(cls):
        return cls("netbsd/arm/v6")
    
    @schemas.classproperty
    def NETBSD_ARM_V7(cls):
        return cls("netbsd/arm/v7")
    
    @schemas.classproperty
    def OPENBSD_386(cls):
        return cls("openbsd/386")
    
    @schemas.classproperty
    def OPENBSD_AMD64(cls):
        return cls("openbsd/amd64")
    
    @schemas.classproperty
    def OPENBSD_ARM(cls):
        return cls("openbsd/arm")
    
    @schemas.classproperty
    def OPENBSD_ARM_V5(cls):
        return cls("openbsd/arm/v5")
    
    @schemas.classproperty
    def OPENBSD_ARM_V6(cls):
        return cls("openbsd/arm/v6")
    
    @schemas.classproperty
    def OPENBSD_ARM_V7(cls):
        return cls("openbsd/arm/v7")
    
    @schemas.classproperty
    def OPENBSD_ARM64(cls):
        return cls("openbsd/arm64")
    
    @schemas.classproperty
    def OPENBSD_ARM64_V8(cls):
        return cls("openbsd/arm64/v8")
    
    @schemas.classproperty
    def PLAN9_386(cls):
        return cls("plan9/386")
    
    @schemas.classproperty
    def PLAN9_AMD64(cls):
        return cls("plan9/amd64")
    
    @schemas.classproperty
    def PLAN9_ARM(cls):
        return cls("plan9/arm")
    
    @schemas.classproperty
    def PLAN9_ARM_V5(cls):
        return cls("plan9/arm/v5")
    
    @schemas.classproperty
    def PLAN9_ARM_V6(cls):
        return cls("plan9/arm/v6")
    
    @schemas.classproperty
    def PLAN9_ARM_V7(cls):
        return cls("plan9/arm/v7")
    
    @schemas.classproperty
    def SOLARIS_AMD64(cls):
        return cls("solaris/amd64")
    
    @schemas.classproperty
    def WINDOWS_386(cls):
        return cls("windows/386")
    
    @schemas.classproperty
    def WINDOWS_AMD64(cls):
        return cls("windows/amd64")
    
    @schemas.classproperty
    def WINDOWS_ARM(cls):
        return cls("windows/arm")
    
    @schemas.classproperty
    def WINDOWS_ARM_V5(cls):
        return cls("windows/arm/v5")
    
    @schemas.classproperty
    def WINDOWS_ARM_V6(cls):
        return cls("windows/arm/v6")
    
    @schemas.classproperty
    def WINDOWS_ARM_V7(cls):
        return cls("windows/arm/v7")
    
    @schemas.classproperty
    def WINDOWS_ARM64(cls):
        return cls("windows/arm64")
    
    @schemas.classproperty
    def WINDOWS_ARM64_V8(cls):
        return cls("windows/arm64/v8")
