# coding: utf-8

"""
    Snyk API

    Snyk helps software-driven businesses develop fast and stay secure. Continuously find and fix vulnerabilities for npm, Maven, NuGet, RubyGems, PyPI and more.

    The version of the OpenAPI document: REST
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from snyk_python_sdk import schemas  # noqa: F401


class ProjectSettings(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "pull_requests",
            "recurring_tests",
        }
        
        class properties:
        
            @staticmethod
            def pull_requests() -> typing.Type['PullRequestsSettings']:
                return PullRequestsSettings
        
            @staticmethod
            def recurring_tests() -> typing.Type['RecurringTestsSettings']:
                return RecurringTestsSettings
        
            @staticmethod
            def auto_dependency_upgrade() -> typing.Type['AutoDependencyUpgradeSettings']:
                return AutoDependencyUpgradeSettings
        
            @staticmethod
            def auto_remediation_prs() -> typing.Type['AutoRemediationPRsSettings']:
                return AutoRemediationPRsSettings
        
            @staticmethod
            def manual_remediation_prs() -> typing.Type['ManualRemediationPRsSettings']:
                return ManualRemediationPRsSettings
        
            @staticmethod
            def pull_request_assignment() -> typing.Type['PullRequestAssignmentSettings']:
                return PullRequestAssignmentSettings
            __annotations__ = {
                "pull_requests": pull_requests,
                "recurring_tests": recurring_tests,
                "auto_dependency_upgrade": auto_dependency_upgrade,
                "auto_remediation_prs": auto_remediation_prs,
                "manual_remediation_prs": manual_remediation_prs,
                "pull_request_assignment": pull_request_assignment,
            }
    
    pull_requests: 'PullRequestsSettings'
    recurring_tests: 'RecurringTestsSettings'
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pull_requests"]) -> 'PullRequestsSettings': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["recurring_tests"]) -> 'RecurringTestsSettings': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["auto_dependency_upgrade"]) -> 'AutoDependencyUpgradeSettings': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["auto_remediation_prs"]) -> 'AutoRemediationPRsSettings': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["manual_remediation_prs"]) -> 'ManualRemediationPRsSettings': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pull_request_assignment"]) -> 'PullRequestAssignmentSettings': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["pull_requests", "recurring_tests", "auto_dependency_upgrade", "auto_remediation_prs", "manual_remediation_prs", "pull_request_assignment", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pull_requests"]) -> 'PullRequestsSettings': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["recurring_tests"]) -> 'RecurringTestsSettings': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["auto_dependency_upgrade"]) -> typing.Union['AutoDependencyUpgradeSettings', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["auto_remediation_prs"]) -> typing.Union['AutoRemediationPRsSettings', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["manual_remediation_prs"]) -> typing.Union['ManualRemediationPRsSettings', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pull_request_assignment"]) -> typing.Union['PullRequestAssignmentSettings', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["pull_requests", "recurring_tests", "auto_dependency_upgrade", "auto_remediation_prs", "manual_remediation_prs", "pull_request_assignment", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        pull_requests: 'PullRequestsSettings',
        recurring_tests: 'RecurringTestsSettings',
        auto_dependency_upgrade: typing.Union['AutoDependencyUpgradeSettings', schemas.Unset] = schemas.unset,
        auto_remediation_prs: typing.Union['AutoRemediationPRsSettings', schemas.Unset] = schemas.unset,
        manual_remediation_prs: typing.Union['ManualRemediationPRsSettings', schemas.Unset] = schemas.unset,
        pull_request_assignment: typing.Union['PullRequestAssignmentSettings', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ProjectSettings':
        return super().__new__(
            cls,
            *args,
            pull_requests=pull_requests,
            recurring_tests=recurring_tests,
            auto_dependency_upgrade=auto_dependency_upgrade,
            auto_remediation_prs=auto_remediation_prs,
            manual_remediation_prs=manual_remediation_prs,
            pull_request_assignment=pull_request_assignment,
            _configuration=_configuration,
            **kwargs,
        )

from snyk_python_sdk.model.auto_dependency_upgrade_settings import AutoDependencyUpgradeSettings
from snyk_python_sdk.model.auto_remediation_prs_settings import AutoRemediationPRsSettings
from snyk_python_sdk.model.manual_remediation_prs_settings import ManualRemediationPRsSettings
from snyk_python_sdk.model.pull_request_assignment_settings import PullRequestAssignmentSettings
from snyk_python_sdk.model.pull_requests_settings import PullRequestsSettings
from snyk_python_sdk.model.recurring_tests_settings import RecurringTestsSettings
